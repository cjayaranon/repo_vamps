[1mdiff --cc Users/admin.py[m
[1mindex ada9e35,6001f0f..0000000[m
[1m--- a/Users/admin.py[m
[1m+++ b/Users/admin.py[m
[36m@@@ -15,9 -15,9 +15,15 @@@[m [mclass MyUserChangeForm(UserChangeForm)[m
  class UserAdmin(AuthUserAdmin):[m
      form = MyUserChangeForm[m
      fieldsets = ([m
[32m++<<<<<<< HEAD[m
[32m +        (None, {'fields': ('username', 'password','position',)}),[m
[32m +        (_('Personal info'), {[m
[32m +            'fields': ('first_name', 'last_name', 'email', 'position',)[m
[32m++=======[m
[32m+         (None, {'fields': ('username', 'password','position', 'userpic')}),[m
[32m+         (_('Personal info'), {[m
[32m+             'fields': ('first_name', 'last_name', 'email', 'position','userpic')[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
          }[m
          ),[m
          (_('Permissions'), {[m
[1mdiff --cc Users/migrations/0001_initial.py[m
[1mindex 8ad14eb,26effda..0000000[m
[1m--- a/Users/migrations/0001_initial.py[m
[1m+++ b/Users/migrations/0001_initial.py[m
[36m@@@ -1,5 -1,5 +1,9 @@@[m
  # -*- coding: utf-8 -*-[m
[32m++<<<<<<< HEAD[m
[32m +# Generated by Django 1.9.5 on 2017-08-18 06:25[m
[32m++=======[m
[32m+ # Generated by Django 1.9.5 on 2016-10-21 20:19[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  from __future__ import unicode_literals[m
  [m
  import django.contrib.auth.models[m
[36m@@@ -31,7 -31,7 +35,11 @@@[m [mclass Migration(migrations.Migration)[m
                  ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),[m
                  ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),[m
                  ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),[m
[32m++<<<<<<< HEAD[m
[32m +                ('position', models.CharField(choices=[('Admin', 'Admin'), ('Bookkeeper', 'Bookkeeper'), ('Cashier', 'Cashier')], default='Admin', max_length=10)),[m
[32m++=======[m
[32m+                 ('position', models.CharField(choices=[('Driver', 'Driver'), ('Conductor', 'Conductor')], default='Driver', max_length=10)),[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
                  ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),[m
                  ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),[m
              ],[m
[1mdiff --cc clients/admin.py[m
[1mindex e743df9,ba310f4..0000000[m
[1m--- a/clients/admin.py[m
[1m+++ b/clients/admin.py[m
[36m@@@ -1,47 -1,24 +1,71 @@@[m
  from django.contrib import admin[m
[32m++<<<<<<< HEAD[m
[32m +from .models import Client, client_capital, loanApplication, Loan, payLoanLedger_in, payLoanLedger_over, MAF, ODF, Collateral, Restruct[m
[32m++=======[m
[32m+ from .models import Client, loanApplication, Loan, LoanInformation, payLoan[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  # Register your models here.[m
  [m
  [m
  [m
  class ClientsAdmin(admin.ModelAdmin):[m
[32m++<<<<<<< HEAD[m
[32m +    list_display = ['lastname', 'firstname', 'cust_number', 'membership_type', 'client_status'][m
[32m +[m
[32m +class ClientCapitalAdmin(admin.ModelAdmin):[m
[32m +	list_display = ['cap_client','cap_id', 'capital', 'cap_contrib_date'][m
[32m +[m
[32m +class LoanApplicationAdmin(admin.ModelAdmin):[m
[32m +    list_display = ['client', 'app_kind', 'app_amount', 'app_date', 'app_status', 'app_id', 'restruct'][m
[32m +[m
[32m +class LoanAdmin(admin.ModelAdmin):[m
[32m +    list_display = ['client', 'loan_status', 'interest_rate', 'interest_rate_over', 'id', 'update', 'overdue', 'type_of_loan'][m
[32m +[m
[32m +class RestructAdmin(admin.ModelAdmin):[m
[32m +	list_display = ['loan_root', 'loan_in_interest', 'loan_in_amount', 'loan_over_interest', 'loan_over_amount', 'approval_status', 'restruct_status', 'restruct_fee', 'id'][m
[32m +[m
[32m +class CollAdmin(admin.ModelAdmin):[m
[32m +	list_display = ['name', 'owner', 'description', 'val'][m
[32m +[m
[32m +class PayAdmin_IN(admin.ModelAdmin):[m
[32m +    list_display = ['client', 'trans_date', 'reference', 'debit_loanGranted', 'credit_payment', 'int_per_month', 'total_loan_recievable', 'loan_pay_type', 'loan_pay_id'][m
[32m +[m
[32m +class PayAdmin_OVER(admin.ModelAdmin):[m
[32m +    list_display = ['client', 'trans_date', 'reference', 'debit_loanGranted', 'credit_payment', 'int_per_month', 'total_loan_recievable', 'loan_pay_type', 'loan_pay_id',][m
[32m +[m
[32m +class PayMAFAdmin(admin.ModelAdmin):[m
[32m +    list_display = ['maf_client','maf_contrib_date', 'maf_ref', 'maf_debit', 'maf_credit', 'maf_total', 'maf_id'][m
[32m +[m
[32m +class PayODFAdmin(admin.ModelAdmin):[m
[32m +    list_display = ['odf_client', 'odf_contrib_date', 'odf_ref', 'odf_debit', 'odf_credit', 'odf_total', 'odf_id'][m
[32m +[m
[32m +            [m
[32m +admin.site.register(Client, ClientsAdmin)[m
[32m +admin.site.register(client_capital, ClientCapitalAdmin)[m
[32m +admin.site.register(loanApplication,LoanApplicationAdmin)[m
[32m +admin.site.register(Loan, LoanAdmin)[m
[32m +admin.site.register(Restruct, RestructAdmin)[m
[32m +admin.site.register(Collateral, CollAdmin)[m
[32m +admin.site.register(payLoanLedger_in ,PayAdmin_IN)[m
[32m +admin.site.register(payLoanLedger_over, PayAdmin_OVER)[m
[32m +admin.site.register(MAF, PayMAFAdmin)[m
[32m +admin.site.register(ODF, PayODFAdmin)[m
[32m++=======[m
[32m+     list_display = ['cust_number', 'firstname', 'lastname'][m
[32m+ [m
[32m+ class LoanApplicationAdmin(admin.ModelAdmin):[m
[32m+     list_display = ['app_id', 'client','app_date', 'app_status'][m
[32m+ [m
[32m+ class LoanAdmin(admin.ModelAdmin):[m
[32m+     filter_horizontal = ('loan_information',)[m
[32m+ [m
[32m+ class PayAdmin(admin.ModelAdmin):[m
[32m+     list_display = ['pay_id', 'client', 'pay_amount', 'pay_trans_date', 'pay_type'][m
[32m+ [m
[32m+             [m
[32m+ admin.site.register(Client, ClientsAdmin)[m
[32m+ admin.site.register(loanApplication,LoanApplicationAdmin)[m
[32m+ admin.site.register(Loan, LoanAdmin)[m
[32m+ admin.site.register(LoanInformation)[m
[32m+ admin.site.register(payLoan ,PayAdmin)[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
[1mdiff --cc clients/forms.py[m
[1mindex 15dbe21,3733a7f..0000000[m
[1m--- a/clients/forms.py[m
[1m+++ b/clients/forms.py[m
[36m@@@ -1,5 -1,6 +1,11 @@@[m
[32m++<<<<<<< HEAD[m
[32m +from django.forms import ModelForm, Textarea[m
[32m +from clients.models import Client, Collateral, client_capital, MAF, ODF, loanApplication, Restruct, payLoanLedger_in, payLoanLedger_over, Loan[m
[32m++=======[m
[32m+ from django.forms import ModelForm[m
[32m+ from clients.models import Client[m
[32m+ from clients.models import loanApplication, payLoan[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  from crispy_forms.helper import FormHelper[m
  from crispy_forms.layout import Layout, Fieldset, Submit, Field[m
  from crispy_forms.bootstrap import FormActions, PrependedText, AppendedText[m
[36m@@@ -21,17 -22,19 +27,32 @@@[m [mclass ClientForm(ModelForm)[m
              'educ_attain',[m
              'occupation',[m
              'membership_type',[m
[32m++<<<<<<< HEAD[m
[32m +            'client_id_type',[m
[32m +            'client_id_number',[m
[32m++=======[m
[32m+             # 'client_status',[m
[32m+             'capital',[m
[32m+             'client_id_type',[m
[32m+             'client_id_number',[m
[32m+             'client_odf',[m
[32m+             'client_maf',[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
              'beneficiary',[m
          ][m
          [m
          widgets = {[m
[32m++<<<<<<< HEAD[m
[32m +        'firstname': forms.TextInput(attrs={'placeholder':'First Name'}),[m
[32m +        'middlename': forms.TextInput(attrs={'placeholder':'Middle Name'}),[m
[32m +        'lastname': forms.TextInput(attrs={'placeholder':'Last Name'}),[m
[32m +        'client_id_number': forms.TextInput(attrs={'placeholder':'ID Number'}),[m
[32m +        'birthdate': forms.TextInput(attrs={'placeholder':'YYYY-MM-DD'})[m
[32m++=======[m
[32m+         'capital': forms.TextInput,[m
[32m+         'client_odf': forms.TextInput,[m
[32m+         'client_maf': forms.TextInput,[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
          }[m
  [m
          labels = {[m
[36m@@@ -43,19 -46,21 +64,33 @@@[m
              'birthdate':('Date of Birth'),[m
              'educ_attain':('Educational Attainment'),[m
              'membership_type':('Membership Type'),[m
[32m++<<<<<<< HEAD[m
[32m++=======[m
[32m+             # 'client_status':('Client Status'),[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
              'client_id_type':('ID Type'),[m
              'client_id_number':('ID Number'),[m
              'client_odf':('ODF'),[m
              'client_maf':('MAF'),[m
          }[m
  [m
[32m++<<<<<<< HEAD[m
[32m +[m
[32m +    def __init__(self, *args, **kwargs):[m
[32m++=======[m
[32m+     def __init__(self, *args, **kwargs):[m
[32m+         # request = kwargs.pop('request')[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
          super(ClientForm, self).__init__(*args, **kwargs)[m
          helper = self.helper = FormHelper()[m
          # self.helper.form_method = 'POST'[m
          self.helper.form_onkeypress = 'return alpha(event)'[m
[32m++<<<<<<< HEAD[m
[32m +        # self.helper.form_class = 'no-spinners','form-horizontal'[m
[32m++=======[m
[32m+         self.helper.form_class = 'no-spinners','form-horizontal'[m
[32m+         self.helper.show_form_labels = False[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
          self.helper.add_input(Submit('submit','Add Client'))[m
          self.helper.layout = Layout([m
              Fieldset([m
[36m@@@ -69,226 -74,59 +104,278 @@@[m
                  'membership_type',[m
                  'client_id_type',[m
                  'client_id_number',[m
[32m++<<<<<<< HEAD[m
[32m++=======[m
[32m+                 'client_odf',[m
[32m+                 'client_maf'[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
                  ),[m
              )[m
          layout = helper.layout = Layout()[m
          for field_name, field in self.fields.items():[m
                  layout.append(Field(field_name, placeholder=field.label))[m
                  helper.form_show_labels = False[m
[32m++<<<<<<< HEAD[m
[32m +[m
[32m +class CapitalForm(ModelForm):[m
[32m +    class Meta:[m
[32m +        model = client_capital[m
[32m +        fields = [[m
[32m +        'cap_client',[m
[32m +        'cap_contrib_date',[m
[32m +        'cap_contrib',[m
[32m +        'capital'[m
[32m +        ][m
[32m +[m
[32m +        labels = {[m
[32m +        'cap_client': ('Client Name'),[m
[32m +        'cap_contrib_date': ('Date'),[m
[32m +        'cap_contrib': ('Contribution'),[m
[32m +        'capital': ('Total')[m
[32m +        }[m
[32m +[m
[32m++=======[m
[32m+         [m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  class LoanApplicationForm(ModelForm):[m
      class Meta:[m
          model = loanApplication[m
          fields = [[m
              'client',[m
[32m++<<<<<<< HEAD[m
[32m +            'app_date',[m
[32m +            'app_kind',[m
[32m +            'app_amount',[m
[32m++=======[m
[32m+             'app_id',[m
[32m+             'app_date',[m
[32m+             # 'app_status',[m
[32m+             'app_kind',[m
[32m+             'app_amount',[m
[32m+             'app_comaker',[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
              [m
          ][m
          widgets = {[m
              'app_amount': forms.TextInput,[m
[32m++<<<<<<< HEAD[m
[32m +            [m
[32m +        }[m
[32m +[m
[32m +[m
[32m +[m
[32m +class StructLoanApplicationForm(ModelForm):[m
[32m +    class Meta:[m
[32m +        model = loanApplication[m
[32m +        fields = [[m
[32m +            'client',[m
[32m +            'app_date',[m
[32m +            'app_kind',[m
[32m +            'app_amount',[m
[32m +            'restruct'[m
[32m +            [m
[32m +        ][m
[32m +        widgets = {[m
[32m +            'app_amount': forms.TextInput,[m
[32m +            [m
[32m +        }[m
[32m +[m
[32m +[m
[32m +[m
[32m +class RestructForm(ModelForm):[m
[32m +    class Meta:[m
[32m +        model = Restruct[m
[32m +        fields = [[m
[32m +            'loan_root',[m
[32m +            'loan_in_interest',[m
[32m +            'loan_in_amount',[m
[32m +            'loan_over_interest',[m
[32m +            'loan_over_amount',[m
[32m +            'restruct_fee',[m
[32m +        ][m
[32m +[m
[32m +[m
[32m +class CoMakerForm(ModelForm):[m
[32m +    class Meta:[m
[32m +        model = loanApplication[m
[32m +        fields = [[m
[32m +            'app_comaker'[m
[32m +        ][m
[32m +[m
[32m +[m
[32m +class CollateralForm(ModelForm):[m
[32m +    class Meta:[m
[32m +        model = Collateral[m
[32m +        fields = [[m
[32m +        'name',[m
[32m +        'owner',[m
[32m +        'description',[m
[32m +        'val'[m
[32m +        ][m
[32m +[m
[32m +        widgets = {[m
[32m +        'name': forms.TextInput(attrs={'placeholder':'Name'}),[m
[32m +        'description': forms.Textarea(attrs={'placeholder':'Desription'}),[m
[32m +        'val': forms.TextInput(attrs={'placeholder':'Monetary Value'})[m
[32m +        }[m
[32m +[m
[32m +[m
[32m +[m
[32m +class PayLoanForm(ModelForm):[m
[32m +    class Meta:[m
[32m +        model = payLoanLedger_in[m
[32m +        fields = [[m
[32m +        'client',[m
[32m +        'trans_date',[m
[32m +        'reference',[m
[32m +        'debit_loanGranted',[m
[32m +        'credit_payment',[m
[32m +        'int_per_month',[m
[32m +        'total_loan_recievable',[m
[32m +        'loan_pay_type',[m
[32m +        'loan_pay_received_by'[m
[32m +        ][m
[32m +[m
[32m +        widgets = {[m
[32m +        'credit_payment': forms.TextInput,[m
[32m +        'reference': forms.TextInput,[m
[32m +        'loan_pay_received_by': forms.TextInput,[m
[32m +        'loan_pay_received_by': forms.TextInput(attrs={'value':'Bookkeeper'}),[m
[32m +        }[m
[32m +[m
[32m +        labels = {[m
[32m +        'client':('Client Name'),[m
[32m +        'trans_date': ('Date of Payment'),[m
[32m +        'reference': ('OR No.'),[m
[32m +        'debit_loanGranted': ('Debit/Loan Granted'),[m
[32m +        'credit_payment': ('Credit/Payment'),[m
[32m +        'int_per_month': ('Interest per Month'),[m
[32m +        'total_loan_recievable': ('Total Loan Receivable'),[m
[32m +        'loan_pay_type': ('Payment Type'),[m
[32m +        'loan_pay_received_by': ('Received By')[m
[32m +        }[m
[32m +[m
[32m +        initial = {[m
[32m +        'loan_pay_received_by':'Bookkeeper'[m
[32m +        }[m
[32m +[m
[32m +[m
[32m +[m
[32m +class PayLoanForm_o(ModelForm):[m
[32m +    class Meta:[m
[32m +        model = payLoanLedger_over[m
[32m +        fields = [[m
[32m +        'client',[m
[32m +        'trans_date',[m
[32m +        'reference',[m
[32m +        'debit_loanGranted',[m
[32m +        'credit_payment',[m
[32m +        'int_per_month',[m
[32m +        'total_loan_recievable',[m
[32m +        'loan_pay_type',[m
[32m +        'loan_pay_received_by'[m
[32m +        ][m
[32m +[m
[32m +        widgets = {[m
[32m +        'credit_payment': forms.TextInput,[m
[32m +        'reference': forms.TextInput,[m
[32m +        'loan_pay_received_by': forms.TextInput,[m
[32m +        'loan_pay_received_by': forms.TextInput(attrs={'value':'Bookkeeper'}),[m
[32m +        }[m
[32m +[m
[32m +        labels = {[m
[32m +        'client':('Client Name'),[m
[32m +        'trans_date': ('Date of Payment'),[m
[32m +        'reference': ('OR No.'),[m
[32m +        'debit_loanGranted': ('Debit/Loan Granted'),[m
[32m +        'credit_payment': ('Credit/Payment'),[m
[32m +        'int_per_month': ('Interest per Month'),[m
[32m +        'total_loan_recievable': ('Total Loan Receivable'),[m
[32m +        'loan_pay_type': ('Payment Type'),[m
[32m +        'loan_pay_received_by': ('Received By')[m
[32m +        }[m
[32m +[m
[32m +        initial = {[m
[32m +        'loan_pay_received_by':'Bookkeeper'[m
[32m +        }[m
[32m +[m
[32m +[m
[32m +class MAFform(ModelForm):[m
[32m +    class Meta:[m
[32m +        model = MAF[m
[32m +        fields = [[m
[32m +        'maf_client',[m
[32m +        'maf_contrib_date',[m
[32m +        'maf_ref',[m
[32m +        'maf_debit',[m
[32m +        'maf_credit',[m
[32m +        'maf_total'[m
[32m +        ][m
[32m +[m
[32m +        labels = {[m
[32m +        'maf_client': ('Client Name'),[m
[32m +        'maf_contrib_date': ('Date'),[m
[32m +        'maf_ref': ('Reference'),[m
[32m +        'maf_debit': ('Debit'),[m
[32m +        'maf_credit': ('Credit'),[m
[32m +        'maf_total': ('Total')[m
[32m +        }[m
[32m +[m
[32m +        initial = {[m
[32m +        'maf_ref':'-'[m
[32m +        }[m
[32m +[m
[32m +[m
[32m +class ODFform(ModelForm):[m
[32m +    class Meta:[m
[32m +        model = ODF[m
[32m +        fields = [[m
[32m +        'odf_client',[m
[32m +        'odf_contrib_date',[m
[32m +        'odf_ref',[m
[32m +        'odf_debit',[m
[32m +        'odf_credit',[m
[32m +        'odf_total'[m
[32m +        ][m
[32m +[m
[32m +        labels = {[m
[32m +        'odf_client': ('Client Name'),[m
[32m +        'odf_contrib_date': ('Date'),[m
[32m +        'odf_ref': ('Reference'),[m
[32m +        'odf_debit': ('Debit'),[m
[32m +        'odf_credit': ('Credit'),[m
[32m +        'odf_total': ('Total')[m
[32m++=======[m
[32m+ [m
[32m+         }[m
[32m+         labels = {[m
[32m+             'client': ('Client Name'),[m
[32m+             # 'app_status': ('Loan Status'),[m
[32m+             'app_kind': ('Type of Loan'),[m
[32m+             'app_amount': ('Loan amount'),[m
[32m+             'app_comaker': ('Loan comaker'),[m
[32m+         }[m
[32m+ [m
[32m+ class PayLoanForm(ModelForm):[m
[32m+     class Meta:[m
[32m+         model = payLoan[m
[32m+         fields = [[m
[32m+         'client',[m
[32m+         'pay_amount',[m
[32m+         'pay_trans_date',[m
[32m+         'pay_type',[m
[32m+         'pay_for'[m
[32m+         ][m
[32m+ [m
[32m+         widgets = {[m
[32m+         'pay_amount': forms.TextInput,[m
[32m+         }[m
[32m+ [m
[32m+         labels = {[m
[32m+         'client': ('Client Name'),[m
[32m+         'pay_amount': ('Amount'),[m
[32m+         'pay_trans_date': ('Date of Payment'),[m
[32m+         'pay_type': ('Payment Type'),[m
[32m+         'pay_for': ('Payment for')[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
          }[m
[1mdiff --cc clients/migrations/0001_initial.py[m
[1mindex c2e789e,de74069..0000000[m
[1m--- a/clients/migrations/0001_initial.py[m
[1m+++ b/clients/migrations/0001_initial.py[m
[36m@@@ -1,11 -1,9 +1,19 @@@[m
  # -*- coding: utf-8 -*-[m
[32m++<<<<<<< HEAD[m
[32m +# Generated by Django 1.9.5 on 2017-08-18 06:40[m
[32m +from __future__ import unicode_literals[m
[32m +[m
[32m +import datetime[m
[32m +import django.core.validators[m
[32m +from django.db import migrations, models[m
[32m +import django.db.models.deletion[m
[32m++=======[m
[32m+ # Generated by Django 1.9.5 on 2016-10-30 12:14[m
[32m+ from __future__ import unicode_literals[m
[32m+ [m
[32m+ import datetime[m
[32m+ from django.db import migrations, models[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  [m
  [m
  class Migration(migrations.Migration):[m
[36m@@@ -24,126 -22,21 +32,144 @@@[m
                  ('firstname', models.CharField(default='', max_length=99)),[m
                  ('middlename', models.CharField(default='', max_length=99)),[m
                  ('lastname', models.CharField(default='', max_length=99)),[m
[32m++<<<<<<< HEAD[m
[32m +                ('age', models.PositiveIntegerField(default=18, validators=[django.core.validators.MinValueValidator(18)])),[m
[32m +                ('civil_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed'), ('Separated', 'Separated')], max_length=10)),[m
[32m++=======[m
[32m+                 ('age', models.IntegerField(default=18)),[m
[32m+                 ('civil_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed'), ('Separated', 'Separated')], default='Single', max_length=10)),[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
                  ('phone_number', models.CharField(blank=True, max_length=11)),[m
                  ('address', models.CharField(default='Davao City', max_length=99)),[m
                  ('birthdate', models.DateField(blank=True, default=datetime.datetime.now)),[m
                  ('educ_attain', models.CharField(choices=[('Grade School', 'Grade School'), ('High School', 'High School'), ('College Graduate', 'College Graduate'), ('College Undergraduate', 'College Undergraduate')], default='College Graduate', max_length=22)),[m
                  ('occupation', models.CharField(default='', max_length=99)),[m
[32m++<<<<<<< HEAD[m
[32m +                ('membership_type', models.CharField(choices=[('Driver', 'Driver'), ('Operator', 'Operator'), ('Allied Worker', 'Allied Worker')], max_length=13)),[m
[32m +                ('client_status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=9)),[m
[32m +                ('client_id_type', models.CharField(choices=[('SSS', 'SSS'), ('TIN', 'TIN'), ('Others', 'Others')], max_length=7)),[m
[32m +                ('client_id_number', models.CharField(default='', max_length=20)),[m
[32m +                ('beneficiary', models.CharField(choices=[('Single', 'Single'), ('Wife', 'Wife'), ('Parents', 'Parents')], max_length=8)),[m
[32m +            ],[m
[32m +        ),[m
[32m +        migrations.CreateModel([m
[32m +            name='client_capital',[m
[32m +            fields=[[m
[32m +                ('cap_id', models.AutoField(primary_key=True, serialize=False)),[m
[32m +                ('cap_contrib_date', models.DateField(default=datetime.datetime.now, verbose_name='Date of Contribution: ')),[m
[32m +                ('cap_contrib', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('capital', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('cap_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Client')),[m
[32m +            ],[m
[32m +        ),[m
[32m +        migrations.CreateModel([m
[32m +            name='Collateral',[m
[32m +            fields=[[m
[32m +                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m +                ('name', models.CharField(max_length=100)),[m
[32m +                ('description', models.TextField(blank=True, null=True)),[m
[32m +                ('val', models.DecimalField(blank=True, decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clients.Client')),[m
[32m +            ],[m
[32m +        ),[m
[32m +        migrations.CreateModel([m
[32m +            name='Loan',[m
[32m +            fields=[[m
[32m +                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m +                ('type_of_loan', models.CharField(choices=[('Providential', 'Providential'), ('Emergency', 'Emergency')], max_length=12)),[m
[32m +                ('loan_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('loan_overflow', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('interest_rate', models.DecimalField(blank=True, decimal_places=1, max_digits=8, validators=[django.core.validators.MinValueValidator(0.1)])),[m
[32m +                ('loan_duration', models.PositiveIntegerField()),[m
[32m +                ('loan_status', models.CharField(choices=[('Outstanding', 'Outstanding'), ('Paid', 'Paid'), ('Overdue', 'Overdue')], default='Outstanding', max_length=11)),[m
[32m +                ('update', models.BooleanField(default=False)),[m
[32m +                ('check_number', models.CharField(blank=True, max_length=50, null=True)),[m
[32m +                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Client')),[m
[32m +                ('collateral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clients.Collateral')),[m
[32m +            ],[m
[32m +        ),[m
[32m +        migrations.CreateModel([m
[32m +            name='loanApplication',[m
[32m +            fields=[[m
[32m +                ('app_id', models.AutoField(primary_key=True, serialize=False)),[m
[32m +                ('app_date', models.DateField(default=datetime.datetime.now, verbose_name='Date of application')),[m
[32m +                ('app_status', models.CharField(choices=[('Pending', 'Pending'), ('Denied', 'Denied'), ('Approved', 'Approved'), ('Paid', 'Paid')], default='Pending', max_length=15)),[m
[32m +                ('app_kind', models.CharField(choices=[('Providential Loan', 'Providential Loan'), ('Emergency Loan', 'Emergency Loan')], default='Providential Loan', max_length=20)),[m
[32m +                ('app_amount', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('approval_date', models.DateField(blank=True, null=True)),[m
[32m +                ('app_comaker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Comaker', to='clients.Client')),[m
[32m +                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Client')),[m
[32m +            ],[m
[32m +        ),[m
[32m +        migrations.CreateModel([m
[32m +            name='MAF',[m
[32m +            fields=[[m
[32m +                ('maf_id', models.AutoField(primary_key=True, serialize=False)),[m
[32m +                ('maf_contrib_date', models.DateField(default=datetime.datetime.now, verbose_name='Date of Contribution: ')),[m
[32m +                ('maf_ref', models.CharField(default='forwarded balance', max_length=99)),[m
[32m +                ('maf_debit', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('maf_credit', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('maf_total', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True)),[m
[32m +                ('maf_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Client')),[m
[32m +            ],[m
[32m +        ),[m
[32m +        migrations.CreateModel([m
[32m +            name='ODF',[m
[32m +            fields=[[m
[32m +                ('odf_id', models.AutoField(primary_key=True, serialize=False)),[m
[32m +                ('odf_contrib_date', models.DateField(default=datetime.datetime.now, verbose_name='Date of Contribution: ')),[m
[32m +                ('odf_ref', models.CharField(default='forwarded balance', max_length=99)),[m
[32m +                ('odf_debit', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('odf_credit', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('odf_total', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=10, null=True)),[m
[32m +                ('odf_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Client')),[m
[32m +            ],[m
[32m +        ),[m
[32m +        migrations.CreateModel([m
[32m +            name='payLoanLedger_in',[m
[32m +            fields=[[m
[32m +                ('trans_date', models.DateField(default=datetime.datetime.now)),[m
[32m +                ('reference', models.CharField(default='-', max_length=20, null=True)),[m
[32m +                ('debit_loanGranted', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('credit_payment', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('int_per_month', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('total_loan_recievable', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True)),[m
[32m +                ('loan_pay_id', models.AutoField(primary_key=True, serialize=False)),[m
[32m +                ('loan_pay_type', models.CharField(choices=[('Cash', 'Cash'), ('Cheque', 'Check')], default='Cash', max_length=7)),[m
[32m +                ('loan_pay_received_by', models.CharField(default='Cashier', max_length=15)),[m
[32m +                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Loan')),[m
[32m +            ],[m
[32m +        ),[m
[32m +        migrations.CreateModel([m
[32m +            name='payLoanLedger_over',[m
[32m +            fields=[[m
[32m +                ('trans_date', models.DateField(default=datetime.datetime.now)),[m
[32m +                ('reference', models.CharField(default='-', max_length=20, null=True)),[m
[32m +                ('debit_loanGranted', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('credit_payment', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('int_per_month', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),[m
[32m +                ('total_loan_recievable', models.DecimalField(blank=True, decimal_places=2, default='-', max_digits=10, null=True)),[m
[32m +                ('loan_pay_id', models.AutoField(primary_key=True, serialize=False)),[m
[32m +                ('loan_pay_type', models.CharField(choices=[('Cash', 'Cash'), ('Cheque', 'Check')], default='Cash', max_length=7)),[m
[32m +                ('loan_pay_received_by', models.CharField(default='Cashier', max_length=15)),[m
[32m +                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.Loan')),[m
[32m +            ],[m
[32m +        ),[m
[32m +        migrations.AddField([m
[32m +            model_name='loan',[m
[32m +            name='loan_application',[m
[32m +            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clients.loanApplication'),[m
[32m +        ),[m
[32m++=======[m
[32m+                 ('membership_type', models.CharField(choices=[('Driver', 'Driver'), ('Operator', 'Operator'), ('Allied Worker', 'Allied Worker')], default='Allied Worker', max_length=13)),[m
[32m+                 ('client_status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=9)),[m
[32m+                 ('capital', models.DecimalField(blank=True, decimal_places=2, max_digits=8)),[m
[32m+                 ('client_id_type', models.CharField(choices=[('SSS', 'SSS'), ('TIN', 'TIN'), ('Others', 'Others')], default='SSS', max_length=7)),[m
[32m+                 ('client_id_number', models.CharField(default='', max_length=20)),[m
[32m+                 ('client_odf', models.DecimalField(blank=True, decimal_places=2, max_digits=8)),[m
[32m+                 ('client_maf', models.DecimalField(blank=True, decimal_places=2, max_digits=8)),[m
[32m+                 ('beneficiary', models.CharField(choices=[('Single', 'Single'), ('Wife', 'Wife'), ('Parents', 'Parents')], default='Single', max_length=8)),[m
[32m+             ],[m
[32m+         ),[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      ][m
[1mdiff --cc clients/models.py[m
[1mindex 8f8c154,89645a5..0000000[m
[1m--- a/clients/models.py[m
[1m+++ b/clients/models.py[m
[36m@@@ -1,7 -1,6 +1,10 @@@[m
  from __future__ import unicode_literals[m
  [m
  from django.db import models[m
[32m++<<<<<<< HEAD[m
[32m +from django.contrib import admin[m
[32m++=======[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  from datetime import datetime[m
  from django.core.validators import MinValueValidator[m
  [m
[36m@@@ -10,15 -9,16 +13,25 @@@[m [moptional = [m
      'blank': True[m
  }[m
  [m
[32m++<<<<<<< HEAD[m
[32m++=======[m
[32m+ #NO CUSTOMER PHONE NUMBER, CAPITAL, ODF, MAF[m
[32m+ # Create your models here.[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  class Client(models.Model):[m
  [m
      SINGLE='Single'[m
      MARRIED='Married'[m
      WIDOWED='Widowed'[m
      SEPARATED='Separated'[m
[32m++<<<<<<< HEAD[m
[32m +    SPOUSE='Spouse'[m
[32m +    PARENTS='Parents'[m
[32m +    HEIRS='Heirs'[m
[32m++=======[m
[32m+     WIFE='Wife'[m
[32m+     PARENTS='Parents'[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      GRADESCHOOL='Grade School'[m
      HIGHSCHOOL='High School'[m
      COLLEGEGRADUATE='College Graduate'[m
[36m@@@ -31,14 -31,11 +44,20 @@@[m
      SSS='SSS'[m
      TIN='TIN'[m
      OTHERS='Others'[m
[32m++<<<<<<< HEAD[m
[32m +[m
[32m +    # unused[m
[32m++=======[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      WAITING='Waiting'[m
      DENIED='Denied'[m
      APPROVED='Approved'[m
  [m
  [m
[32m++<<<<<<< HEAD[m
[32m +    # unused[m
[32m++=======[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      APP_STATUS = ([m
          (WAITING, 'Waiting'),[m
          (DENIED, 'Denied'),[m
[36m@@@ -87,61 -84,34 +106,89 @@@[m
  [m
      BENFICIARY = ([m
          (SINGLE, 'Single'),[m
[32m++<<<<<<< HEAD[m
[32m +        (SPOUSE, 'Spouse'),[m
[32m +        (PARENTS, 'Parents'),[m
[32m +        (HEIRS, 'Heirs')[m
[32m++=======[m
[32m+         (WIFE, 'Wife'),[m
[32m+         (PARENTS, 'Parents'),[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      )[m
  [m
  [m
      cust_number = models.AutoField(primary_key=True)[m
[32m++<<<<<<< HEAD[m
[32m +    join_date = models.DateField([m
[32m +        'Joined Date: ',[m
[32m +        default=datetime.now,[m
[32m +        blank=True)[m
[32m +    firstname = models.CharField([m
[32m +        max_length=99,[m
[32m +        null=False,[m
[32m +        default="")[m
[32m +    middlename = models.CharField([m
[32m +        max_length=99,[m
[32m +        null=False,[m
[32m +        default="")[m
[32m +    lastname = models.CharField([m
[32m +        max_length=99,[m
[32m +        null=False,[m
[32m +        default="")[m
[32m +    age = models.PositiveIntegerField([m
[32m +        default=18,[m
[32m +        null=False,[m
[32m +        validators=[MinValueValidator(18)])[m
[32m +    civil_status = models.CharField([m
[32m +        choices=CS,[m
[32m +        # default=SINGLE,[m
[32m +        max_length=10,[m
[32m +        )[m
[32m +    phone_number = models.CharField([m
[32m +        max_length=11,[m
[32m +        blank=True)[m
[32m +    address = models.CharField([m
[32m +        max_length=99,[m
[32m +        null=False,[m
[32m +        default="Davao City")[m
[32m +    birthdate = models.DateField([m
[32m +        blank=True,[m
[32m +        null=False,[m
[32m +        # default=datetime.now[m
[32m +        )[m
[32m++=======[m
[32m+     join_date = models.DateField('Joined Date: ', default=datetime.now, blank=True)[m
[32m+     firstname = models.CharField(max_length=99, null=False, default="")[m
[32m+     middlename = models.CharField(max_length=99, null=False, default="")[m
[32m+     lastname = models.CharField(max_length=99, null=False, default="")[m
[32m+     age = models.PositiveIntegerField(default=18, null=False, validators=[MinValueValidator(18)])[m
[32m+     civil_status = models.CharField([m
[32m+         choices=CS,[m
[32m+         default=SINGLE,[m
[32m+         max_length=10,[m
[32m+         )[m
[32m+     phone_number = models.CharField(max_length=11, blank=True)[m
[32m+     address = models.CharField(max_length=99, null=False, default="Davao City")[m
[32m+     birthdate = models.DateField(blank=True, null=False, default=datetime.now)[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      educ_attain = models.CharField([m
          choices=EA,[m
          default=COLLEGEGRADUATE,[m
          max_length=22,[m
          )[m
[32m++<<<<<<< HEAD[m
[32m +    occupation = models.CharField([m
[32m +        max_length=99,[m
[32m +        default="")[m
[32m +    membership_type = models.CharField([m
[32m +        choices=MT,[m
[32m +        # default=ALLIEDWORKER,[m
[32m++=======[m
[32m+     occupation = models.CharField(max_length=99, default="")[m
[32m+     membership_type = models.CharField([m
[32m+         choices=MT,[m
[32m+         default=ALLIEDWORKER,[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
          null=False,[m
          max_length=13,[m
          )[m
[36m@@@ -151,18 -121,19 +198,34 @@@[m
          null=False,[m
          max_length=9,[m
          )[m
[32m++<<<<<<< HEAD[m
[32m +    client_id_type = models.CharField([m
[32m +        choices=ID_TYPE,[m
[32m +        # default=SSS,[m
[32m +        null=False,[m
[32m +        max_length=7,[m
[32m +        )[m
[32m +    client_id_number = models.CharField([m
[32m +        max_length=20,[m
[32m +        default="")[m
[32m +    beneficiary = models.CharField([m
[32m +        choices=BENFICIARY,[m
[32m +        # default=SINGLE,[m
[32m++=======[m
[32m+     capital = models.DecimalField(max_digits=8, decimal_places=2, blank=True, validators=[MinValueValidator(0.01)])[m
[32m+     client_id_type = models.CharField([m
[32m+         choices=ID_TYPE,[m
[32m+         default=SSS,[m
[32m+         null=False,[m
[32m+         max_length=7,[m
[32m+         )[m
[32m+     client_id_number = models.CharField(max_length=20, default="")[m
[32m+     client_odf = models.DecimalField(max_digits=8, decimal_places=2, blank=True, validators=[MinValueValidator(0.01)])[m
[32m+     client_maf = models.DecimalField(max_digits=8, decimal_places=2, blank=True, validators=[MinValueValidator(0.01)])[m
[32m+     beneficiary = models.CharField([m
[32m+         choices=BENFICIARY,[m
[32m+         default=SINGLE,[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
          null=False,[m
          max_length=8,[m
          )[m
[36m@@@ -171,45 -142,16 +234,54 @@@[m
          return u'%s, %s' % (self.lastname, self.firstname)[m
  [m
  [m
[32m++<<<<<<< HEAD[m
[32m +[m
[32m +class client_capital(models.Model):[m
[32m +    cap_client=models.ForeignKey(Client)[m
[32m +    cap_id=models.AutoField(primary_key=True)[m
[32m +    cap_contrib_date=models.DateField([m
[32m +        'Date of Contribution: ',[m
[32m +        default=datetime.now[m
[32m +        )[m
[32m +    cap_contrib=models.DecimalField(    # added to capital[m
[32m +        max_digits=8,[m
[32m +        decimal_places=2,[m
[32m +        default=0,[m
[32m +        validators=[MinValueValidator(0.01)][m
[32m +        )[m
[32m +    capital=models.DecimalField(    # total capital[m
[32m +        max_digits=8,[m
[32m +        decimal_places=2,[m
[32m +        blank=True,[m
[32m +        default=0,[m
[32m +        validators=[MinValueValidator(0.01)][m
[32m +        )[m
[32m +[m
[32m +    def __unicode__(self):[m
[32m +        return u'%s' % (self.capital)[m
[32m +[m
[32m +[m
[32m +[m
[32m++=======[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  class loanApplication(models.Model):[m
      providentialLoan='Providential Loan'[m
      emergencyLoan='Emergency Loan'[m
      pending='Pending'[m
      denied='Denied'[m
      approved='Approved'[m
[32m++<<<<<<< HEAD[m
[32m +    done='Paid'[m
[32m++=======[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      Status = ([m
          (pending, 'Pending'),[m
          (denied, 'Denied'),[m
          (approved, 'Approved'),[m
[32m++<<<<<<< HEAD[m
[32m +        (done, 'Paid')[m
[32m++=======[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      )[m
      kind = ([m
      (providentialLoan,'Providential Loan'),[m
[36m@@@ -217,9 -159,7 +289,13 @@@[m
      )[m
      client=models.ForeignKey(Client)[m
      app_id=models.AutoField(primary_key=True)[m
[32m++<<<<<<< HEAD[m
[32m +    app_date=models.DateField([m
[32m +        'Date of application', [m
[32m +        default=datetime.now)[m
[32m++=======[m
[32m+     app_date=models.DateField('Date of application: ', default=datetime.now)[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      app_status=models.CharField([m
          choices=Status,[m
          default=pending,[m
[36m@@@ -230,78 -170,26 +306,100 @@@[m
          default = providentialLoan,[m
          max_length=20,[m
          )[m
[32m++<<<<<<< HEAD[m
[32m +    app_amount=models.DecimalField([m
[32m +        max_digits=8,[m
[32m +        decimal_places=2, [m
[32m +        validators=[MinValueValidator(0.01)][m
[32m +        )[m
[32m +    app_comaker=models.ForeignKey([m
[32m +        Client, [m
[32m +        related_name='Comaker', [m
[32m +        **optional[m
[32m +        )[m
[32m +    approval_date = models.DateField(**optional)[m
[32m +    restruct = models.BooleanField(default=False)[m
[32m +[m
[32m +    def __unicode__(self):[m
[32m +        return u'%s' % (self.client)[m
[32m +[m
[32m +[m
[32m +[m
[32m +class Restruct(models.Model):[m
[32m +    loan_root = models.ForeignKey(loanApplication, related_name='app_root')[m
[32m +    loan_in_interest = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=1, [m
[32m +        blank=True, [m
[32m +        validators=[MinValueValidator(0.1)][m
[32m +    )[m
[32m +    loan_in_amount = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=2, [m
[32m +        blank=True,[m
[32m +        validators=[MinValueValidator(0.01)][m
[32m +    )[m
[32m +    loan_over_interest = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=1, [m
[32m +        blank=True, [m
[32m +        validators=[MinValueValidator(0.1)][m
[32m +    )[m
[32m +    loan_over_amount = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=2, [m
[32m +        blank=True,[m
[32m +        validators=[MinValueValidator(0.01)][m
[32m +    )[m
[32m +    restruct_fee = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=2, [m
[32m +        blank=True,[m
[32m +        default=50.00,[m
[32m +        validators=[MinValueValidator(0.01)][m
[32m +    )[m
[32m +    approval_status = models.BooleanField(default=False)[m
[32m +    restruct_status = models.CharField([m
[32m +        max_length=11, [m
[32m +        choices=([m
[32m +            ('Outstanding', "Outstanding"),[m
[32m +            ('Paid', "Paid"),[m
[32m +        ), [m
[32m +        default="Outstanding")[m
[32m +[m
[32m++=======[m
[32m+     app_amount=models.DecimalField(max_digits=8, decimal_places=2, validators=[MinValueValidator(0.01)])[m
[32m+     app_comaker=models.ForeignKey(Client, related_name='Comaker', blank=True, null=True)[m
[32m+     approval_date = models.DateField(**optional)[m
[32m+ [m
[32m+     def __unicode__(self):[m
[32m+         return '%s' % (self.client)[m
[32m+ [m
[32m+ [m
[32m+ class LoanInformation(models.Model):[m
[32m+     name = models.CharField(max_length=100)[m
[32m+     description = models.TextField(**optional)[m
[32m+ [m
[32m+     def __unicode__(self):[m
[32m+         return self.name[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  [m
  [m
  class Collateral(models.Model):[m
      name = models.CharField(max_length=100)[m
[32m++<<<<<<< HEAD[m
[32m +    owner = models.ForeignKey(Client, **optional)[m
[32m +    description = models.TextField(**optional)[m
[32m +    val = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=2, [m
[32m +        blank=True, [m
[32m +        validators=[MinValueValidator(0.01)][m
[32m +    )[m
[32m++=======[m
[32m+     description = models.TextField(**optional)[m
[32m+     value = models.DecimalField(max_digits=8, decimal_places=1, blank=True, validators=[MinValueValidator(0.1)])[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  [m
  [m
  [m
[36m@@@ -312,240 -200,53 +410,290 @@@[m [mclass Loan(models.Model)[m
          ))[m
      client = models.ForeignKey('Client')[m
      loan_application = models.OneToOneField('loanApplication')[m
[32m++<<<<<<< HEAD[m
[32m +    # loan_information = models.ManyToManyField('LoanInformation')[m
[32m +    loan_amount = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=2, [m
[32m +        blank=True,[m
[32m +        validators=[MinValueValidator(0.01)][m
[32m +    )[m
[32m +    loan_overflow = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=2, [m
[32m +        blank=True, [m
[32m +        # validators=[MinValueValidator(0.01)], [m
[32m +        default=0[m
[32m +    )[m
[32m +    interest_rate = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=1, [m
[32m +        blank=True, [m
[32m +        validators=[MinValueValidator(0.1)][m
[32m +    )[m
[32m +    interest_rate_over = models.DecimalField([m
[32m +        max_digits=8, [m
[32m +        decimal_places=1, [m
[32m +        blank=True, [m
[32m +        validators=[MinValueValidator(0.1)][m
[32m +    )[m
[32m +    loan_duration = models.PositiveIntegerField()[m
[32m +    loan_status = models.CharField([m
[32m +        max_length=11, [m
[32m +        choices=([m
[32m +            ('Outstanding', "Outstanding"),[m
[32m +            ('Paid', "Paid"),[m
[32m +            ('Restructured', "Restructured")[m
[32m +        ), [m
[32m +        default="Outstanding")[m
[32m +    update = models.BooleanField(default=False)[m
[32m +    overdue = models.BooleanField(default=False)[m
[32m +    check_number = models.CharField([m
[32m +        max_length=50,[m
[32m +         **optional)[m
[32m +    collateral = models.ForeignKey('Collateral', **optional)[m
[32m +    [m
[32m +    def __unicode__(self):[m
[32m +        return u'%s, %s' % (self.client, self.loan_amount + self.loan_overflow)[m
[32m +[m
[32m +class payLoanLedger_in(models.Model):[m
[32m++=======[m
[32m+     loan_information = models.ManyToManyField('LoanInformation')[m
[32m+     loan_amount = models.DecimalField(max_digits=8, decimal_places=2, blank=True, validators=[MinValueValidator(0.01)])[m
[32m+     interest_rate = models.DecimalField(max_digits=8, decimal_places=1, blank=True, validators=[MinValueValidator(0.1)])[m
[32m+     loan_duration = models.PositiveIntegerField()[m
[32m+     loan_status = models.CharField(max_length=11, choices=([m
[32m+         ('Outstanding', "Outstanding"),[m
[32m+         ('Paid', "Paid")[m
[32m+         ), default="Outstanding")[m
[32m+     check_number = models.CharField(max_length=50, **optional)[m
[32m+     collateral = models.ForeignKey('Collateral', **optional)[m
[32m+ [m
[32m+     def __unicode__(self):[m
[32m+         return "{} - {}".format(self.client, self.loan_application.approval_date)[m
[32m+ [m
[32m+ class payLoan(models.Model):[m
[32m+     maf='MAF'[m
[32m+     odf='ODF'[m
[32m+     loan='Loan'[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
[32m +    cash='Cash'[m
[32m +    cheque='Cheque'[m
[32m +[m
[32m +    ptype=([m
[32m +        (cash, 'Cash'),[m
[32m++<<<<<<< HEAD[m
[32m +        (cheque, 'Check'),[m
[32m +        )[m
[32m +[m
[32m +    #ledger fields (may contain fields also associated with the receipt)[m
[32m +    client=models.ForeignKey(Loan)[m
[32m +    trans_date=models.DateField([m
[32m +        default=datetime.now)[m
[32m +    reference=models.CharField([m
[32m +        max_length=20,[m
[32m +        null=True,[m
[32m +        default="-")[m
[32m +    debit_loanGranted=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    credit_payment=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    int_per_month=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=8,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    total_loan_recievable=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        # validators=[MinValueValidator(0.01)][m
[32m +    )[m
[32m +    #official receipt fields[m
[32m +    loan_pay_id=models.AutoField(primary_key=True)[m
[32m +    loan_pay_type=models.CharField([m
[32m +        choices=ptype,[m
[32m +        default=cash,[m
[32m +        max_length=7,[m
[32m +        )[m
[32m +    loan_pay_received_by=models.CharField([m
[32m +        max_length=15,[m
[32m +        default="Cashier",[m
[32m +        null=False)[m
[32m +[m
[32m +    # def __unicode__(self):[m
[32m +    #     return u"%s, %s" %(self.client, self.pay_amount)[m
[32m +    #     return unicode(self.client, self.pay_amount)[m
[32m +[m
[32m +[m
[32m +class payLoanLedger_over(models.Model):[m
      cash='Cash'[m
      cheque='Cheque'[m
  [m
      ptype=([m
          (cash, 'Cash'),[m
[32m +        (cheque, 'Check'),[m
[32m +        )[m
[32m +[m
[32m +    #ledger fields (may contain fields also associated with the receipt)[m
[32m +    client=models.ForeignKey(Loan)[m
[32m +    trans_date=models.DateField([m
[32m +        default=datetime.now)[m
[32m +    reference=models.CharField([m
[32m +        max_length=20,[m
[32m +        null=True,[m
[32m +        default="-")[m
[32m +    debit_loanGranted=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    credit_payment=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    int_per_month=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=8,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    total_loan_recievable=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        # validators=[MinValueValidator(0.01)][m
[32m +    )[m
[32m +    #official receipt fields[m
[32m +    loan_pay_id=models.AutoField(primary_key=True)[m
[32m +    loan_pay_type=models.CharField([m
[32m++=======[m
[32m+         (cheque, 'Cheque'),[m
[32m+         )[m
[32m+ [m
[32m+     pfor=([m
[32m+         (loan, 'Loan'),[m
[32m+         (maf, 'MAF'),[m
[32m+         (odf, 'ODF'),[m
[32m+         )[m
[32m+ [m
[32m+     client=models.ForeignKey(Client)[m
[32m+     pay_id=models.AutoField(primary_key=True)[m
[32m+     pay_amount=models.DecimalField(max_digits=8, decimal_places=2, validators=[MinValueValidator(0.01)])[m
[32m+     pay_trans_date=models.DateField(default=datetime.now)[m
[32m+     pay_type=models.CharField([m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
          choices=ptype,[m
          default=cash,[m
          max_length=7,[m
          )[m
[32m++<<<<<<< HEAD[m
[32m +    loan_pay_received_by=models.CharField([m
[32m +        max_length=15,[m
[32m +        default="Cashier",[m
[32m +        null=False)[m
[32m +[m
[32m +class MAF(models.Model):[m
[32m +    maf_client=models.ForeignKey(Client)[m
[32m +    maf_id=models.AutoField(primary_key=True)[m
[32m +    # maf_beneficiary=models.ForeignKey(Client.beneficiary)[m
[32m +    maf_contrib_date=models.DateField([m
[32m +        'Date of Contribution: ',[m
[32m +        default=datetime.now)[m
[32m +    maf_ref=models.CharField([m
[32m +        max_length=99,[m
[32m +        null=False,[m
[32m +        default="forwarded balance")[m
[32m +    maf_debit=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    maf_credit=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    maf_total=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        # validators=[MinValueValidator(0.01)][m
[32m +    )[m
[32m +[m
[32m +    # def __unicode__(self):[m
[32m +    #     return u'%s' % (self.maf_total)[m
[32m +[m
[32m +[m
[32m +class ODF(models.Model):[m
[32m +    odf_client=models.ForeignKey(Client)[m
[32m +    # maf_beneficiary=models.ForeignKey(Client.beneficiary)[m
[32m +    odf_id=models.AutoField(primary_key=True)[m
[32m +    odf_contrib_date=models.DateField([m
[32m +        'Date of Contribution: ',[m
[32m +        default=datetime.now)[m
[32m +    odf_ref=models.CharField([m
[32m +        max_length=99,[m
[32m +        null=False,[m
[32m +        default="forwarded balance")[m
[32m +    odf_debit=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    odf_credit=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="-",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        validators=[MinValueValidator(0.01)])[m
[32m +    odf_total=models.DecimalField([m
[32m +        null=True,[m
[32m +        default="",[m
[32m +        blank=True,[m
[32m +        max_digits=10,[m
[32m +        decimal_places=2,[m
[32m +        # validators=[MinValueValidator(0.01)][m
[31m-     )[m
[32m++    )[m
[32m++=======[m
[32m+     pay_for=models.CharField([m
[32m+         choices=pfor,[m
[32m+         default=loan,[m
[32m+         max_length=5,[m
[32m+         )[m
[32m+ [m
[32m+ [m
[32m+     def __unicode__(self):[m
[31m -        return "%s" (self.client)[m
[32m++        return "%s" (self.client)[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
[1mdiff --cc frontend/static/css/base_overlay.css[m
[1mindex 3cc0755,e19097e..0000000[m
[1m--- a/frontend/static/css/base_overlay.css[m
[1m+++ b/frontend/static/css/base_overlay.css[m
[36m@@@ -9,7 -9,7 +9,11 @@@[m [mfieldset, form, label, legend[m
  table, caption, tbody, tfoot, thead, tr, th, td {outline: none !important;[m
  }[m
  html{[m
[32m++<<<<<<< HEAD[m
[32m +    background:#EFF1F3;[m
[32m++=======[m
[32m+     background:#666666;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  @font-face {[m
      font-family: SegoeUI;[m
[36m@@@ -20,10 -20,10 +24,17 @@@[m [mbody[m
  }[m
  [m
  .header {[m
[32m++<<<<<<< HEAD[m
[32m +    width: 100%;[m
[32m +    overflow: hidden;[m
[32m +    height: 100%;[m
[32m +    [m
[32m++=======[m
[32m+     position: relative;[m
[32m+     width: 100%;[m
[32m+     overflow: hidden;[m
[32m+     height: 100%;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  [m
  .logo-group {[m
[36m@@@ -34,8 -34,8 +45,13 @@@[m
  }[m
  [m
  .logo {[m
[32m++<<<<<<< HEAD[m
[32m +    height: 6vw;[m
[32m +    width: 6vw;[m
[32m++=======[m
[32m+     height: 10vw;[m
[32m+     width: 10vw;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      align-content: center;[m
  }[m
  [m
[36m@@@ -47,7 -47,7 +63,11 @@@[m
  [m
  .abbrev {[m
      margin-top: 0vw;[m
[32m++<<<<<<< HEAD[m
[32m +    margin-bottom: 0vw;[m
[32m++=======[m
[32m+     margin-bottom: 1vw;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  [m
  .full {[m
[36m@@@ -57,7 -57,7 +77,11 @@@[m
  [m
  .ver {[m
      margin-top: 0vw;[m
[32m++<<<<<<< HEAD[m
[32m +    margin-left: 0.4vw;[m
[32m++=======[m
[32m+     margin-left: 0.5vw;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  [m
  .user-group {[m
[36m@@@ -71,35 -71,18 +95,51 @@@[m
  }[m
  [m
  .user-name {[m
[32m++<<<<<<< HEAD[m
[32m +    /*margin-top: 10px;*/[m
[32m +}[m
[32m +[m
[32m +.user-position {[m
[32m +    /*margin-top: 0px;*/[m
[32m +}[m
[32m +[m
[32m +.body {[m
[32m +    background-color: #EFF1F3;[m
[32m++=======[m
[32m+     margin-top: 10px;[m
[32m+ }[m
[32m+ [m
[32m+ .user-position {[m
[32m+     margin-top: 0px;[m
[32m+ }[m
[32m+ [m
[32m+ .body {[m
[32m+     background-color: #666666;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  [m
  .footersize {[m
      height: auto;[m
      margin: auto auto -2vw;[m
[31m -}[m
[32m++<<<<<<< HEAD[m
[32m +}[m
[32m +[m
[32m +.left{[m
[32m +    padding-right: 0vw;[m
[32m +    margin-top: 0vw;[m
[32m +    padding-top: 1vw;[m
[32m +    padding-bottom: 10px;[m
[32m +}[m
[32m +[m
[32m +.center{[m
[32m +    margin-top: 0vw;[m
[32m +    padding-left: 1vw;[m
[32m +    padding-top: 1vw;[m
[32m +}[m
[32m +[m
[32m +.right{[m
[32m +     padding-left: 0px;   [m
[32m +}[m
[32m++=======[m
[32m++}[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
[1mdiff --cc frontend/static/css/login_overlay.css[m
[1mindex 74aefc8,8fa9ed8..0000000[m
[1m--- a/frontend/static/css/login_overlay.css[m
[1m+++ b/frontend/static/css/login_overlay.css[m
[36m@@@ -3,17 -3,17 +3,28 @@@[m [mbody[m
  }[m
  [m
  .login-page {[m
[32m++<<<<<<< HEAD[m
[32m +  width: 300px;[m
[32m +  padding: 1% 0 0;[m
[32m++=======[m
[32m+   width: 360px;[m
[32m+   padding: 5% 0 0;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
    margin: -15px auto auto;[m
  }[m
  [m
  .form {[m
    position: relative;[m
    z-index: 1;[m
[32m++<<<<<<< HEAD[m
[32m +  background: #EFF1F3;[m
[32m +  max-width: 360px;[m
[32m +  margin: 50px auto auto;[m
[32m++=======[m
[32m+   background: #F4fffd;[m
[32m+   max-width: 360px;[m
[32m+   margin: auto auto auto;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
    padding: 45px;[m
    text-align: center;[m
    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);[m
[1mdiff --cc frontend/static/css/menu_overlay.css[m
[1mindex 409eb2e,a3d36d2..0000000[m
[1m--- a/frontend/static/css/menu_overlay.css[m
[1m+++ b/frontend/static/css/menu_overlay.css[m
[36m@@@ -9,12 -9,12 +9,20 @@@[m
   }[m
  [m
   p {[m
[32m++<<<<<<< HEAD[m
[32m +    color: #000000;[m
[32m++=======[m
[32m+     color: #ffffff;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
   }[m
  [m
   .header {[m
      position: fixed;[m
[32m++<<<<<<< HEAD[m
[32m +    height: 9vw;[m
[32m++=======[m
[32m+     height: 13vw;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      background-color: #ffffff;[m
   }[m
  [m
[36m@@@ -37,10 -37,10 +45,17 @@@[m
      position: fixed;[m
      left: 250px;[m
      width: 0;[m
[32m++<<<<<<< HEAD[m
[32m +    height: 300%;[m
[32m +    margin-left: -250px;[m
[32m +    overflow-y: auto;[m
[32m +    background: #545556;[m
[32m++=======[m
[32m+     height: 100%;[m
[32m+     margin-left: -250px;[m
[32m+     overflow-y: auto;[m
[32m+     background: #000;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      -webkit-transition: all 0.5s ease;[m
      -moz-transition: all 0.5s ease;[m
      -o-transition: all 0.5s ease;[m
[36m@@@ -55,7 -55,7 +70,11 @@@[m
      width: 100%;[m
      position: absolute;[m
      padding: 15px;[m
[32m++<<<<<<< HEAD[m
[32m +    margin-top: 9vw;[m
[32m++=======[m
[32m+     margin-top: 13vw;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  [m
  #wrapper.toggled #page-content-wrapper {[m
[36m@@@ -68,7 -68,7 +87,11 @@@[m
  .sidebar-nav {[m
      position: absolute;[m
      top: 0;[m
[32m++<<<<<<< HEAD[m
[32m +    width: 280px;[m
[32m++=======[m
[32m+     width: 260px;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      margin: 0;[m
      padding: 0;[m
      list-style: none;[m
[36m@@@ -82,12 -82,12 +105,20 @@@[m
  .sidebar-nav li a {[m
      display: block;[m
      text-decoration: none;[m
[32m++<<<<<<< HEAD[m
[32m +    color: #FFFFFF;[m
[32m++=======[m
[32m+     color: #999999;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  [m
  .sidebar-nav li a:hover {[m
      text-decoration: none;[m
[32m++<<<<<<< HEAD[m
[32m +    color: #FED766;[m
[32m++=======[m
[32m+     color: #f9dc5c;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      background: rgba(255,255,255,0.2);[m
  }[m
  [m
[36m@@@ -103,7 -103,7 +134,11 @@@[m
  }[m
  [m
  .sidebar-nav > .sidebar-brand a {[m
[32m++<<<<<<< HEAD[m
[32m +    color: #FE4A49;[m
[32m++=======[m
[32m+     color: #bc0900;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  [m
  .sidebar-nav > .sidebar-brand a:hover {[m
[36m@@@ -121,8 -121,7 +156,12 @@@[m
      }[m
  [m
      #sidebar-wrapper {[m
[32m++<<<<<<< HEAD[m
[32m +        width: 280px;[m
[32m +        height: 100%;[m
[32m++=======[m
[32m+         width: 260px;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
      }[m
  [m
      #wrapper.toggled #sidebar-wrapper {[m
[36m@@@ -140,15 -139,46 +179,58 @@@[m
      }[m
  }[m
  [m
[32m++<<<<<<< HEAD[m
[32m +.help .btn:hover {[m
[32m +    background: #FE4A49;[m
[32m +    border-color: #FE4A49;[m
[32m +    color: #ffffff;[m
[32m +}[m
[32m +[m
[32m +.btn-danger:hover {[m
[32m +    background-color: #FE4A49;[m
[32m +    border-color: #FE4A49;[m
[32m++=======[m
[32m+ /*.btn {[m
[32m+   background-color: #740001;[m
[32m+   font-family: 'SegoeUI', 'sans-serif';[m
[32m+   text-transform: uppercase;[m
[32m+   outline: 0;[m
[32m+   width: 100%;[m
[32m+   border: 0;[m
[32m+   border-radius: 0 !important;[m
[32m+   padding: 15px;[m
[32m+   color: #fff;[m
[32m+   font-size: 14px;[m
[32m+   -webkit-transition: all 0.3 ease;[m
[32m+   transition: all 0.3 ease;[m
[32m+   cursor: pointer;[m
[32m+ }*/[m
[32m+ [m
[32m+ .btn2 {[m
[32m+     background-color: #49306b;[m
[32m+     font-family: 'SegoeUI', 'sans-serif';[m
[32m+     text-transform: uppercase;[m
[32m+     outline: 0;[m
[32m+     width: 100%;[m
[32m+     border: 0;[m
[32m+     border-radius: 0 !important;[m
[32m+     padding: 15px;[m
[32m+     color: #fff;[m
[32m+     font-size: 14px;[m
[32m+   -webkit-transition: all 0.3 ease;[m
[32m+   transition: all 0.3 ease;[m
[32m+   cursor: pointer;[m
[32m+ }[m
[32m+ [m
[32m+ .btn:hover {[m
[32m+     background: #ed254e;[m
[32m+     color: #ffffff;[m
[32m+ }[m
[32m+ [m
[32m+ .btn2:hover {[m
[32m+     background: #6b479b;[m
[32m+     color: #ffffff;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  [m
  /*help button*/[m
[1mdiff --cc frontend/static/css/new_client_overlay.css[m
[1mindex 93df59d,eb9bea7..0000000[m
[1m--- a/frontend/static/css/new_client_overlay.css[m
[1m+++ b/frontend/static/css/new_client_overlay.css[m
[36m@@@ -2,9 -2,7 +2,13 @@@[m [mbody[m
      font-family: 'SegoeUI', 'sans-serif';[m
  }[m
  [m
[32m++<<<<<<< HEAD[m
[32m +h3{[m
[32m +  margin-top: 10px;[m
[32m +}[m
[32m++=======[m
[32m+ [m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  [m
  .no-spinners {[m
    -moz-appearance:textfield;[m
[36m@@@ -18,7 -16,7 +22,11 @@@[m
  [m
  [m
  .login-page {[m
[32m++<<<<<<< HEAD[m
[32m +  width: 80vw;[m
[32m++=======[m
[32m+   width: 500px;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
    padding: 5% 0 0;[m
    margin: -15px auto auto;[m
  }[m
[36m@@@ -27,21 -25,10 +35,28 @@@[m
  .form {[m
    position: relative;[m
    z-index: 1;[m
[32m++<<<<<<< HEAD[m
[32m +  background: #EFF1F3;[m
[32m +  max-width: 80vw;[m
[32m +  margin: 0 auto 0;[m
[32m +  padding: 20px 45px 20px;[m
[32m +  text-align: center;[m
[32m +  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);[m
[32m +}[m
[32m +[m
[32m +.small-form{[m
[32m +  position: relative;[m
[32m +  z-index: 1;[m
[32m +  background: #EFF1F3;[m
[32m +  max-width: 40vw;[m
[32m +  margin: 0 auto 3vw;[m
[32m +  padding: 20px 45px 20px;[m
[32m++=======[m
[32m+   background: #f4fffd;[m
[32m+   max-width: 500px;[m
[32m+   margin: 0 auto 3vw;[m
[32m+   padding: 45px;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
    text-align: center;[m
    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);[m
  }[m
[36m@@@ -49,6 -36,28 +64,31 @@@[m
  /*input fields*/[m
  .form-control {[m
    margin-bottom: 12px;[m
[32m++<<<<<<< HEAD[m
[32m++=======[m
[32m+ [m
[32m+ }[m
[32m+ [m
[32m+ /*register button*/[m
[32m+ .buttoncolor input{    [m
[32m+   background-color: #49306B;[m
[32m+   font-family: 'SegoeUI', 'sans-serif';[m
[32m+   text-transform: uppercase;[m
[32m+   outline: 0;[m
[32m+   width: 100%;[m
[32m+   border: 0;[m
[32m+   padding: 15px;[m
[32m+   color: #fff;[m
[32m+   margin-top: 10px;[m
[32m+   font-size: 14px;[m
[32m+   -webkit-transition: all 0.3 ease;[m
[32m+   transition: all 0.3 ease;[m
[32m+   cursor: pointer;[m
[32m+ }[m
[32m+ [m
[32m+ .buttoncolor input:hover{[m
[32m+   background-color: #6b479b;[m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
  }[m
  [m
  /*dropdown button colors*/[m
[36m@@@ -106,10 -115,4 +146,14 @@@[m
    text-decoration: none;[m
  }[m
  [m
[32m++<<<<<<< HEAD[m
[32m +.table{[m
[32m +  margin-bottom: 10px;[m
[32m +}[m
[32m +[m
[32m +.alert{[m
[32m +  margin-bottom: 0px;[m
[31m- }[m
[32m++}[m
[32m++=======[m
[32m+ [m
[32m++>>>>>>> 549418614833c8e5b4d8caf88e6746fdc1fb1760[m
[1mdiff --cc frontend/static/js/js_files/create_loan.js[m
[1mindex f778a1c,8529660..0000000[m
[1m--- a/frontend/static/js/js_files/create_loan.js[m
[1m+++ b/frontend/static/js/js_files/create_loan.js[m
[36m@@@ -16,68 -16,68 +16,133 @@@[m [m$(document).ready(function() [m
      var yescoll = false;[m
      var nocoll = false;[m
  [m
[32m++<<<<<<< HEAD[m
[32m +    // $("#btn-prov").click(function(){[m
[32m +    //     $(this).css('background-color','#888888');[m
[32m +    //     $("#btn-em").css('background-color','');[m
[32m +[m
[32m +    //     providential = true;[m
[32m +    //     emergency = false;[m
[32m +[m
[32m +    //     $("#prov-1").show();[m
[32m +    //     $("#prov-2").hide();[m
[32m +    //     $("#prov-3").hide();[m
[32m +    //     $("#prov-4").hide();[m
[32m +    //     $("#amount").hide();[m
[32m +    //     $("#final-submit").hide();[m
[32m +    //     loan_type = "Providential"[m
[32m +    // }); [m
[32m +[m
[32m +    // $("#btn-em").click(function(){[m
[32m +    //     // Add script to check existing balance[m
[32m +    //     $(this).css('background-color','#888888');[m
[32m +    //     $("#btn-prov").css('background-color','');[m
[32m +[m
[32m +    //     providential = false;[m
[32m +    //     emergency = true;[m
[32m +[m
[32m +    //     $("#prov-1").hide();[m
[32m +    //     $("#prov-2").hide();[m
[32m +    //     $("#prov-3").hide();[m
[32m +    //     $("#prov-4").hide();[m
[32m +    //     $("#amount").show();[m
[32m +    //     $("#final-submit").show();[m
[32m +    //     loan_type = "Emergency"[m
[32m +    // }); [m
[32m +[m
[32m +    // $("#btn-oper").click(function(){[m
[32m +    //     $(this).css('background-color','#888888');[m
[32m +    //     $("#btn-driv").css('background-color','');[m
[32m +[m
[32m +    //     operator = true;[m
[32m +    //     driver = false;[m
[32m +[m
[32m +    //     $("#prov-1").show();[m
[32m +    //     $("#prov-2").show();[m
[32m +    //     $("#prov-3").hide();[m
[32m +    //     $("#prov-4").hide();[m
[32m +    //     $("#amount").hide();[m
[32m +    //     $("#final-submit").hide();[m
[32m +    // }); [m
[32m +[m
[32m +    // $("#btn-driv").click(function(){[m
[32m +    //     $(this).css('background-color','#888888');[m
[32m +    //     $("#btn-oper").css('background-color','');[m
[3